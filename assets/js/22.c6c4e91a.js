(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{371:function(t,s,a){t.exports=a.p+"assets/img/vuex.29c22c0b.jpg"},418:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"vuex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),n("h3",{attrs:{id:"理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#理解"}},[t._v("#")]),t._v(" 理解")]),t._v(" "),n("p",[n("strong",[t._v("官方说法")]),t._v("：Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。"),n("br"),t._v(" "),n("strong",[t._v("官方栗子")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state  数据源")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// view  视图")]),t._v("\n  template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    <div>{{ count }}</div>\n  ")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actions  事件")]),t._v("\n  methods"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("⌛这是一个简单的型计数功能页面，通过increment函数实现count的增长。")]),t._v(" "),n("p",[t._v("❓ 那么问题来了，假如有两个页面，要求他们都能对count进行操控，并且都能第一时间获取count的变化，那怎么办呢？"),n("br"),t._v("\n💡 是不是可以把count剥离出来放到一个大家都能访问到的地方，并且能访问到最新的值。")]),t._v(" "),n("p",[t._v("这就是Vuex在做的事，Vuex 就如同一个全局的管理员一样，帮着我们统一管理着项目的"),n("u",[t._v("共享数据")]),t._v("。那他是怎么实现的呢？请看：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mutations"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("🙈但是这么一想，这不就是一个全局对象吗？他和单纯的全局对象有什么不一样的地方呢？")]),t._v(" "),n("ul",[n("li",[t._v("Vuex的存储状态是响应式的，当Vue组件从store中读取状态的时候，若store中的状态发生变化，那相应的组件也会相应地得到高效更新。")]),t._v(" "),n("li",[t._v("不能直接改变store中的状态，需要通过mutation")])]),t._v(" "),n("h3",{attrs:{id:"几个核心概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#几个核心概念"}},[t._v("#")]),t._v(" 几个核心概念")]),t._v(" "),n("p",[t._v("每一个 Vuex 应用的核心就是 store（仓库）,“store”基本上就是一个容器(对象），它包含着你的应用中大部分的状态 (state)。")]),t._v(" "),n("p",[n("strong",[t._v("State")]),t._v("：State是vuex状态管理的数据源"),n("br"),t._v(" "),n("strong",[t._v("Getter")]),t._v("：Getter可以将State的数据进行过滤再输出"),n("br"),t._v(" "),n("strong",[t._v("Mutation")]),t._v("：Mutation是vuex中改变State的唯一途经（严格模式下）,并且只能是同步操作"),n("br"),t._v(" "),n("strong",[t._v("Action")]),t._v("：一些对State的异步操作可以存放在Action中，并通过Action提交Mutation变更状态"),n("br"),t._v(" "),n("strong",[t._v("Module")]),t._v("：当Store对象过强大，可以根据业务需求分成多个Module"),n("br"),t._v(" "),n("img",{attrs:{src:a(371),alt:"vuex"}})]),t._v(" "),n("p",[t._v("✨总结：我们通过组件出发Action，Action会提交Mutation，Mutation会修改state，组件再根据state和Getter渲染页面。")]),t._v(" "),n("h3",{attrs:{id:"应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),n("p",[t._v("Vuex一般用于中大型Web单页应用对应用的状态进行管理。"),n("br"),t._v("\n下面介绍几个常用的场景："),n("br"),t._v(" "),n("strong",[t._v("使用 vuex 解决跨组件通信问题")])]),t._v(" "),n("p",[n("strong",[t._v("vuex 作为数据存储中心")])])])}),[],!1,null,null,null);s.default=e.exports}}]);